{
  "hooks": {
    "pre-tool-use": [
      {
        "name": "commit-message-lint",
        "matcher": {
          "tool": "Bash",
          "command_patterns": ["git commit -m"]
        },
        "command": "echo '💡 Commit message tips: Use conventional format (feat:/fix:/docs:/chore:/refactor:)'",
        "timeout": 500
      },
      {
        "name": "branch-check",
        "matcher": {
          "tool": "Bash",
          "command_patterns": ["git commit", "git push"]
        },
        "command": "branch=$(git branch --show-current 2>/dev/null) && if [ \"$branch\" = \"main\" ] || [ \"$branch\" = \"master\" ]; then echo '⚠️  Working on main branch - consider creating a feature branch'; fi || true",
        "timeout": 1000
      },
      {
        "name": "uncommitted-changes-check",
        "matcher": {
          "tool": "Bash",
          "command_patterns": ["git checkout", "git switch", "git pull"]
        },
        "command": "if [ -n \"$(git status --porcelain 2>/dev/null)\" ]; then echo '📝 Uncommitted changes detected - consider committing or stashing first'; git status --short | head -5; fi",
        "timeout": 2000
      },
      {
        "name": "pre-push-checks",
        "matcher": {
          "tool": "Bash",
          "command_patterns": ["git push"]
        },
        "command": "echo '🔍 Pre-push checks:' && git log --oneline @{u}.. 2>/dev/null | head -5 && echo '📊 Files changed:' && git diff --stat @{u}.. 2>/dev/null | tail -1 || echo 'Branch not tracking remote yet'",
        "timeout": 3000
      }
    ],
    "post-tool-use": [
      {
        "name": "post-commit-summary",
        "matcher": {
          "tool": "Bash",
          "command_patterns": ["git commit"]
        },
        "command": "if [ $? -eq 0 ]; then echo '✅ Commit successful' && git log -1 --oneline; fi",
        "timeout": 1000
      },
      {
        "name": "post-merge-reminder",
        "matcher": {
          "tool": "Bash",
          "command_patterns": ["git merge", "git pull"]
        },
        "command": "if [ $? -eq 0 ]; then echo '🔄 Merge complete - consider running tests and checking for conflicts'; fi",
        "timeout": 500
      },
      {
        "name": "pr-creation-helper",
        "matcher": {
          "tool": "Bash",
          "command_patterns": ["gh pr create", "git push -u"]
        },
        "command": "if [ $? -eq 0 ]; then echo '🎯 PR/Push successful! Next steps:' && echo '  1. Review CI/CD status' && echo '  2. Request code review' && echo '  3. Update documentation if needed'; fi",
        "timeout": 1000
      },
      {
        "name": "stash-reminder",
        "matcher": {
          "tool": "Bash",
          "command_patterns": ["git stash"]
        },
        "command": "if [ $? -eq 0 ]; then stash_count=$(git stash list | wc -l) && echo \"📦 Stashed changes (total stashes: $stash_count)\" && echo \"Use 'git stash pop' to restore\"; fi",
        "timeout": 1000
      }
    ]
  }
}
